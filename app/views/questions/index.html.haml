- set_title "#{Tenant.default_title}: List of questions"

.row.my-3
  .col-lg-8
    %h2= "#{@questions.size} Questions:"

  .col-lg-4
    / Sort by [ latest | points ]<br/>

.row
  .col-lg-8
    - if @questions.empty?
      %h3
        Whaaaaaaaa.  nothing found
    - @questions.each do |question|
      .card.mb-5
        .card-header
          .row
            .col-lg-10
              %h4= link_to "Q: #{question.title}", question_path(question)
              - if question.get_upvotes.size > 0
                .votebox
                  = "+ #{question.get_upvotes.size}"

              = raw HTML_Truncator.truncate( render_md(question.text).html_safe, 120, {:length_in_chars => true})
            .col-lg-2
              .text-right asked by #{render_avatar(question.creator, :size=>'28x28')}
          .row
            .col-lg-12
              = render_tag_links question.tags

        .card-body
          .row
            .col-lg-7
              = link_to(question_path(question)) do
                = question.answers.count == 0 ? "No answers yet" : "#{question.answers.count} #{"answer".pluralize question.answers.count}"
              - question.uniq_answerers.each do |user|
                = render_avatar( user, :size=>:small )
            .col-lg-5.text-right
              .question_last_updated
                Last updated<br/>
                #{I18n.l(question.updated_at.to_date, :format => :medium)}

    .row
      .col
        = will_paginate(@questions,:renderer => WillPaginate::ActionView::BootstrapLinkRenderer) if @questions.respond_to?(:total_pages)

  - unless @static_render
    .col-lg-4
      = link_to "Ask a New Question".html_safe, new_question_path, class: 'btn btn-primary btn-block'
      %br

      .card.card-lists
        .card-header
          %h5.card-title Top Q&amp;A
        %ul.list-group
          - @top[:qna] && @top[:qna].each do |props|
            %li.list-group-item.list-group-flush
              = link_to "#{props[:title]}", question_path(props[:id])
              = props[:view_count]

      -# .panel.tag_cloud
      -#   %h3 Tags
      -#   - tag_cloud(@tag_cloud, %w(css1 css2 css3 css4)) do |tag, css_class|
      -#     = link_to tag.name, questions_path(tag: tag.name), :class => "#{css_class} badge badge-secondary"
      / .panel
      /   .h2 Popular questions
      / .panel
      /   .h2 Popular tags
